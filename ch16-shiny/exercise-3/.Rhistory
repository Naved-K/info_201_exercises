casual_intro <- sub("Hello, my name is","Hey, I'm", my_intro)
print(casual_intro)
capital_intro <- str_to_title(my_intro)
print(capital_intro)
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
#################
#### PART 2 #####
#################
books <- c("The Giver", "Harry Potter", "Maze Runner", "The Da Vinci Code", "The Great Gatsby", "The Little Prince")
print(books)
top_three_books <- books[(1:3)]
print(top_three_books)
book_reviews <- paste(books, "is a great read!")
print(book_reviews)
remove_book <- function(titles, index) {
return(titles[-index])
}
books_without_four <- remove_book(books, 4)
print(books_without_four)
long_titles <- books[nchar(books) > 15]
print(long_titles)
#################
#### PART 3 #####
#################
numbers <- 1:201
squared_numbers <- numbers*numbers
squared_mean <- mean(squared_numbers)
print(squared_mean)
squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
print(squares)
#################
#### PART 4 #####
#################
summer_break <- as.Date("2018-06-09")
today <- Sys.Date()
days_to_break <- summer_break - today
print(paste("Time difference of", days_to_break, "days until summer break"))
make_birthday_intro <- function(name, age, birthday) {
birthday_as_date <- ymd(birthday) + years(age+1)
todays_date <- Sys.Date()
days_to_birthday <- birthday_as_date - todays_date
if (days_to_birthday < 0) {
days_to_birthday <- 365 + days_to_birthday
}
birthday_string <- paste(make_introduction(age, name), "In", days_to_birthday, 	"days I'll be", age+1)
birthday_string
}
my_bday_intro <- make_birthday_intro("Naved",19,"1998-08-06")
print(my_bday_intro)
#################
#### PART 1 #####
#################
#install.packages("stringr")
#install.packages("lubridate")
library(lubridate)
library(stringr)
my_age <- 19
my_name <- "Naved"
make_introduction <- function (my_age, my_name) {
string <- paste("Hello, my name is", my_name, "and I'm", my_age,  "years old.")
return(string)
}
my_intro <- make_introduction(my_age, my_name)
print(my_intro)
casual_intro <- sub("Hello, my name is","Hey, I'm", my_intro)
print(casual_intro)
capital_intro <- str_to_title(my_intro)
print(capital_intro)
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
#################
#### PART 2 #####
#################
books <- c("The Giver", "Harry Potter", "Maze Runner", "The Da Vinci Code", "The Great Gatsby", "The Little Prince")
print(books)
top_three_books <- books[(1:3)]
print(top_three_books)
book_reviews <- paste(books, "is a great read!")
print(book_reviews)
remove_book <- function(titles, index) {
return(titles[-index])
}
books_without_four <- remove_book(books, 4)
print(books_without_four)
long_titles <- books[nchar(books) > 15]
print(long_titles)
#################
#### PART 3 #####
#################
numbers <- 1:201
squared_numbers <- numbers*numbers
squared_mean <- mean(squared_numbers)
print(squared_mean)
squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
print(squares)
#################
#### PART 4 #####
#################
summer_break <- as.Date("2018-06-09")
today <- Sys.Date()
days_to_break <- summer_break - today
print(paste("Time difference of", days_to_break, "days until summer break"))
make_birthday_intro <- function(name, age, birthday) {
birthday_as_date <- ymd(birthday) + years(age+1)
todays_date <- Sys.Date()
days_to_birthday <- birthday_as_date - todays_date
if (days_to_birthday < 0) {
days_to_birthday <- 365 + days_to_birthday
}
birthday_string <- paste(make_introduction(age, name), "In", days_to_birthday, 	"days I'll be", age+1)
birthday_string
}
my_bday_intro <- make_birthday_intro("Naved",19,"1998-04-05")
print(my_bday_intro)
#################
#### PART 1 #####
#################
#Install stringr for string manipulation; install lubridate for date manipulation
#install.packages("stringr")
#install.packages("lubridate")
library(lubridate)
library(stringr)
my_age <- 19
my_name <- "Naved"
#This function takes in an age and a name and returns a character string that says "Hello, my name is {NAME} and I'm {AGE} years old."
make_introduction <- function (my_age, my_name) {
string <- paste("Hello, my name is", my_name, "and I'm", my_age,     "years old.")
return(string)
}
my_intro <- make_introduction(my_age, my_name)
print(my_intro)
#New variable that replaces "Hello, my name is" to "Hey, I'm
casual_intro <- sub("Hello, my name is","Hey, I'm", my_intro)
print(casual_intro)
#Capitalizes every fisrt letter in the given string
capital_intro <- str_to_title(my_intro)
print(capital_intro)
#Counts the amount of e's in the given string
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
#################
#### PART 2 #####
#################
books <- c("The Giver", "Harry Potter", "Maze Runner", "The Da Vinci Code", "The Great Gatsby", "The Little Prince")
print(books)
top_three_books <- books[(1:3)]
print(top_three_books)
book_reviews <- paste(books, "is a great read!")
print(book_reviews)
# Removes a book at a given index in the book vector
remove_book <- function(titles, index) {
titles[-index]
}
# Use the remove_book fucntion to remove the 4th book
books_without_four <- remove_book(books, 4)
print(books_without_four)
# Find all books with greater than 15 characters in the book vector
long_titles <- books[nchar(books) > 15]
print(long_titles)
#################
#### PART 3 #####
#################
numbers <- 1:201
squared_numbers <- numbers*numbers
squared_mean <- mean(squared_numbers)
print(squared_mean)
# Find all numbers that have an integer square root in the given vector
squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
print(squares)
#################
#### PART 4 #####
#################
summer_break <- as.Date("2018-06-09")
today <- Sys.Date()
days_to_break <- summer_break - today
print(paste("Time difference of", days_to_break, "days until summer break"))
#
make_birthday_intro <- function(name, age, birthday) {
birthday_as_date <- ymd(birthday) + years(age+1)
todays_date <- Sys.Date()
days_to_birthday <- birthday_as_date - todays_date
if (days_to_birthday < 0) {
days_to_birthday <- 365 + days_to_birthday
}
birthday_string <- paste(make_introduction(age, name), "In", days_to_birthday, 	"days I'll be", age+1)
birthday_string
}
my_bday_intro <- make_birthday_intro("Naved",19,"1998-08-06")
print(my_bday_intro)
#################
#### PART 1 #####
#################
#Install stringr for string manipulation; install lubridate for date manipulation
#install.packages("stringr")
#install.packages("lubridate")
library(lubridate)
library(stringr)
my_age <- 19
my_name <- "Naved"
#This function takes in an age and a name and returns a character string that says "Hello, my name is {NAME} and I'm {AGE} years old."
make_introduction <- function (my_age, my_name) {
string <- paste("Hello, my name is", my_name, "and I'm", my_age,     "years old.")
return(string)
}
my_intro <- make_introduction(my_age, my_name)
print(my_intro)
#New variable that replaces "Hello, my name is" to "Hey, I'm
casual_intro <- sub("Hello, my name is","Hey, I'm", my_intro)
print(casual_intro)
#Capitalizes every fisrt letter in the given string
capital_intro <- str_to_title(my_intro)
print(capital_intro)
#Counts the amount of e's in the given string
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
#################
#### PART 2 #####
#################
books <- c("The Giver", "Harry Potter", "Maze Runner", "The Da Vinci Code", "The Great Gatsby", "The Little Prince")
print(books)
top_three_books <- books[(1:3)]
print(top_three_books)
book_reviews <- paste(books, "is a great read!")
print(book_reviews)
# Removes a book at a given index in the book vector
remove_book <- function(titles, index) {
titles[-index]
}
# Use the remove_book function to remove the 4th book
books_without_four <- remove_book(books, 4)
print(books_without_four)
# Find all books with greater than 15 characters in the book vector
long_titles <- books[nchar(books) > 15]
print(long_titles)
#################
#### PART 3 #####
#################
numbers <- 1:201
squared_numbers <- numbers*numbers
squared_mean <- mean(squared_numbers)
print(squared_mean)
# Find all numbers that have an integer square root in the given vector
squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
print(squares)
#################
#### PART 4 #####
#################
summer_break <- as.Date("2018-06-09")
today <- Sys.Date()
days_to_break <- summer_break - today
print(paste("Time difference of", days_to_break, "days until summer break"))
# Takes in a given name, age, and birthday and returns the string "Hello, my name is {NAME} and I'm {AGE} years old. In {N} days I'll be {NEW_AGE}"
make_birthday_intro <- function(name, age, birthday) {
# Get the birthday as a date value
birthday_as_date <- ymd(birthday) + years(age+1)
# Get today's date
todays_date <- Sys.Date()
# Find in how many days the birthday differs from today's date
days_to_birthday <- birthday_as_date - todays_date
# If the birthday is before today's date, make the negative value a valid positive value in number of days
if (days_to_birthday < 0) {
days_to_birthday <- 365 + days_to_birthday
}
# Add each component of the string together using paste()
birthday_string <- paste(make_introduction(age, name), "In", days_to_birthday, 	"days I'll be", age+1)
birthday_string
}
my_bday_intro <- make_birthday_intro("Naved",19,"1998-08-06")
print(my_bday_intro)
#################
#### PART 1 #####
#################
#Install stringr for string manipulation; install lubridate for date manipulation
#install.packages("stringr")
#install.packages("lubridate")
library(lubridate)
library(stringr)
my_age <- 19
my_name <- "Naved"
#This function takes in an age and a name and returns a character string that says "Hello, my name is {NAME} and I'm {AGE} years old."
make_introduction <- function (my_age, my_name) {
string <- paste("Hello, my name is", my_name, "and I'm", my_age,     "years old.")
return(string)
}
my_intro <- make_introduction(my_age, my_name)
print(my_intro)
#New variable that replaces "Hello, my name is" to "Hey, I'm
casual_intro <- sub("Hello, my name is","Hey, I'm", my_intro)
print(casual_intro)
#Capitalizes every fisrt letter in the given string
capital_intro <- str_to_title(my_intro)
print(capital_intro)
#Counts the amount of e's in the given string
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
#################
#### PART 2 #####
#################
books <- c("The Giver", "Harry Potter", "Maze Runner", "The Da Vinci Code", "The Great Gatsby", "The Little Prince")
print(books)
top_three_books <- books[(1:3)]
print(top_three_books)
book_reviews <- paste(books, "is a great read!")
print(book_reviews)
# Removes a book at a given index in the book vector
remove_book <- function(titles, index) {
titles[-index]
}
# Use the remove_book function to remove the 4th book
books_without_four <- remove_book(books, 4)
print(books_without_four)
# Find all books with greater than 15 characters in the book vector
long_titles <- books[nchar(books) > 15]
print(long_titles)
#################
#### PART 3 #####
#################
numbers <- 1:201
squared_numbers <- numbers*numbers
squared_mean <- mean(squared_numbers)
print(squared_mean)
# Find all numbers that have an integer square root in the given vector
squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
print(squares)
#################
#### PART 4 #####
#################
summer_break <- as.Date("2018-06-09")
today <- Sys.Date()
days_to_break <- summer_break - today
print(paste("Time difference of", days_to_break, "days until summer break"))
# Takes in a given name, age, and birthday and returns the string "Hello, my name is {NAME} and I'm {AGE} years old. In {N} days I'll be {NEW_AGE}"
make_birthday_intro <- function(name, age, birthday) {
# Get the birthday as a date value
birthday_as_date <- ymd(birthday) + years(age+1)
# Get today's date
todays_date <- Sys.Date()
# Find in how many days the birthday differs from today's date
days_to_birthday <- birthday_as_date - todays_date
# If the birthday is before today's date, make the negative value a valid positive value in number of days
if (days_to_birthday < 0) {
days_to_birthday <- 365 + days_to_birthday
}
# Add each component of the string together using paste()
birthday_string <- paste(make_introduction(age, name), "In", days_to_birthday, 	"days I'll be", age+1)
birthday_string
}
my_bday_intro <- make_birthday_intro("Naved",19,"1998-08-06")
print(my_bday_intro)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <-
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99,90,84,75,33)
spanish_grades
spanish_grades <- c(100,95,90,87,10)
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 75, 33)
spanish_grades <- c(100, 95, 90, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
print(num_rows)
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
print(num_rows)
print(num_cols)
print(colnames(tas))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols), "cols:", col_names)
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols), "cols:", col_names))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", col_names))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", col_names))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", col_names))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
list_col_names <- paste(col_names)
print(paste("The TA data frame has", num_rows, "rows and", num_cols), "cols:", list_col_names)
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
list_col_names <- paste(col_names)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", list_col_names))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
list_col_names <- collapse(col_names)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", list_col_names))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", collapse="col_names"))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", collapse="col_names"))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", collapse="col_names"))
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
col_names <- colnames(tas)
list_col_names <- paste(col_names, collapse=" ")
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", list_col_names)
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
list_col_names <- paste(colnames(tas), collapse=" ")
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", list_col_names)
# Your script for Part 1 goes here (and delete this comment!)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
list_col_names <- paste(colnames(tas), collapse=" ")
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", list_col_names)
names <- c("Michelle Ho", "Patricia Au", "Anukriti Goyal", "Andrew Kan", "Bao Dinh", "Kishore Vasan")
math_grades <- c(99, 90, 84, 80, 75, 33)
spanish_grades <- c(100, 95, 90, 89, 87, 10)
tas <- data.frame(names, math_grades, spanish_grades)
num_rows <- nrow(tas)
num_cols <- ncol(tas)
list_col_names <- paste(colnames(tas), collapse=" ")
print(paste("The TA data frame has", num_rows, "rows and", num_cols, "cols:", list_col_names)
